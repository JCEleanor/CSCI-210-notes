# WEEK 1

## LEARNING OUTCOMES

### COMPONENT OF OPERATING SYSTEM

- A PROGRAM THAT SITS BTW THE HARDWARE AND THE APPLICATION PROGRAMS
- MANAGES STORAGE, PROCESSES, NETWORK AND PROVIDE INTERFACE TO PROGRAMS OR USERS
- IT'S THE FIRST PROGRAM THAT IS RUN WHEN YOU BOOT YOUR MACHINE

#### THE FUNCTIONS OF A MODERN OS

- MULTITASKING: ALLOW MULTIPLE PROGRAMS TO RUN CONCURRENTLY (MUCH MORE THAN THE NUMBER OF PROCESSORS OR CORES)
- MULTIUSER: ALLOW MULTIPLE USERS TO USE SIMULTANEOUSLY IN THE SAME COMPUTER
- FILE SYSTEM: MANAGE MULTIPLE DISKS, ALLOW STORAGE OF FILES IN A SECURE WAY
- NETWORKING: PROVIDE CONNECTION TO/FROM OTHER COMPUTERS
- GUI/WINDOW MANAGEMENT PROVIDE GUI

### LINUX KERNEL

THE LAYER BETWEEN THE APPLICATIONS AND THE HARDWARE

- "MONOLITHIC" REFERS TO THE KERNAL BEING ONE PROGRAM

### RELATIONSHIP OF LINUX & C

#### WHY C

- C/C++ PROGRAMS ARE COMPILED AND OPTIMIZED FOR
  EFFICIENCY.
- C WAS DESIGNED TO BE A HIGH-LEVEL ASSEMBLY LANGUAGE, WHICH MEANS
  - IT CONTAINS HIGH-LEVEL PROGRAMMING STRUCUTURES SUCH AS IF/FOR/WHILE, TYPED VARIABLES
  - IT HAS MEMORY POINTERS AND ARRAYS

### SSH/SCP, VM, WSL, DUAL BOOT

#### SSH (SECURE SOCKET SHELL)

SSH IS A NETWORK PROTOCOL THAT GIVES USERS, PARTICULARLY SYSTEM ADMIN A SECURE WAY TO ACCESS A COMPUTER OVER AN UNSECURED NETWORK. IT PROVIDE: 1. STRONG PWD AUTHENTICATION 2. PUBLIC KEY AUTHENTICATION 3. ENCRYPTED DATA COMMUNICATIONS BTW 2 PCS CONNECTING OVER AN OPEN NETWORK, SUCH AS THE INTERNET

- AN SSH CLIENT IS A PROGRAM THAT ALLOWS ESTABLISHING SECURE AND AUTHENTICATED SSH CONNECTIONS TO SSH SERVERS.
- SSH CLIENT SOFTWARE IS AVAILABLE IN MANY DESKTOIP OS SUCH AS WINDOWS AND MACOS.

#### ALTERNATIVES TO COMMAND LINE SSH

- WSL (WINDOWS SUBSYSTEM FOR LINUX)
- VIRTUAL MACHINES

  - VIRTUAL BOX
  - VMWARE
  - PARALLELS DESKTOPS

- INSTALL A LINUX DISTRIBUTION ON YOUR OWN MACHINE
- VSCODE SSH EXTENSION

#### BASH

- INSTALLED AS THE DEFAULT SHELL IN MOST LINUX DISTRIBUTIONS (OTHERS SUCH AS ZSH, KORN, TCSH, FISH)

#### THE FILESYSTEM

- TOOLS, PACKAGES, USER DOCUMENTATION, CONFIGURATION FILES - ALMOST EVERYTHING IS A FILE IN AN OPERATING SYSTEM
- AN ABSOLUTE PATH IS A PATH STARTS WITH `/`

### LINUX COMMANDS

#### LS

`-A` INCLUDE DIRECTORY ENTRIES WHOSE NAMES BEGIN WITH A DOT (‘.’).

`-L` LIST FILES IN THE <U>LONG FORMAT</U>, AS DESCRIBED IN THE <U>THE LONG FORMAT</U> SUBSECTION BELOW. WILL SHOW FILE PERMISSION IN THE FIRST COL AS 10-CHARACTER STRING.

```
❯ LS -L
TOTAL 5968
-RW-R--R--@  1 ELEANOR  STAFF  758818 SEP 29 09:11 CSCI210_WEEK10.PDF
DRWXR-XR-X@ 13 ELEANOR  STAFF     416 SEP 27 13:29 EXAMPLEINPUTSOUTPUTS
```

THE FIRST CHARACTER TELLS US IF IT'S A DIRECTORY (`D`), FILE (`-`) OR SYMBOLIC LINK (`L`)

`-H` WHEN USED WITH THE -L OPTION, USE UNIT SUFFIXES: BYTE, KILOBYTE, MEGABYTE, GIGABYTE, TERABYTE AND PETABYTE IN ORDER TO REDUCE THE NUMBER OF DIGITS TO FOUR OR FEWER USING BASE 2 FOR SIZES.

`-R` REVERSE THE ORDER OF THE SORT.

`-S ` SORT BY SIZE (LARGEST FILE FIRST) BEFORE SORTING THE OPERANDS IN LEXICOGRAPHICAL ORDER.

`-T` SORT BY DESCENDING TIME MODIFIED (MOST RECENTLY MODIFIED FIRST).

`-1` (THE NUMERIC DIGIT “ONE”.) FORCE OUTPUT TO BE ONE ENTRY PER LINE. THIS IS THE DEFAULT WHEN OUTPUT IS NOT TO A TERMINAL.

#### OTHER COMMANDS:

- `CD` IS A BUILT-IN FUNCTION OF THE SHELL, WHICH MEANS THE BASH PROCESS HANDLES THE COMMAND

#### OTHER COMMANDS: (INDIVIDUAL COMMANDS THAT ARE EXECUTED AS SEPARATE PROCESSES)

- `MKDIR -P ABC/AA` IF `ABC` DOESN'T EXIST, CREATE PARENT DIR. (BY DEFAULT, PARENTS DIR SHOULD EXIST)

- `CP [-I | -R] {SOURCE} {TARGET}` IF THE TARGET DESTINATION IS AN EXISTING FILE/DIRECTORY, IT IS OVERWRITTEN WITH NO WARNING BY DEFAULT. **USE `-I` TO ISSUE A WARNING.**

- `SCP` THE FILE LOCATION ON A REMOTE HOST IS SPECIFIED USING THE FOLLOWING FORMAT: **`USER@HOST:PATH`**, WHERE PATH IS GIVEN **RELATIVE TO THE USER’S HOME DIRECTORY** (OR AN ABSOLUTE PATH NEEDS TO BE GIVEN).

  - EXAMPLE:
    `SCP LOCAL.TXT TOLGACAN@ISENGARD.MINES.EDU:./REMOTE.TXT`

- `LESS` V `CAT`: CAT PRINTS THE ENTIRE CONTENTS OF A FILE TO THE TERMINAL AT ONCE, WHILE LESS DISPLAYS THE CONTENT ONE SCREEN AT A TIME

- `ECHO`: DISPLAY THE STRING

  - `-N` DOES NOT PRINT AND END OF LINE AT THE END
  - `-E` TURNS ON RECOGNITION OF ESCAPE SEQUENCES (USEFUL FOR SCRIPTING)

  ```
  WITHOUT -E:

  1 $ ECHO "LINE 1\NLINE 2\T(INDENTED)"
  2 LINE 1\NLINE 2\T(INDENTED)

  WITH -E:

  1 $ ECHO -E "LINE 1\NLINE 2\T(INDENTED)"
  2 LINE 1
  3 LINE 2     (INDENTED)
  ```
